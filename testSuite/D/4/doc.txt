Test: If the specified program cannot be executed, mysh prints an error message, and the last exit status is set to 1.

Batch Mode
    1.  In batch mode, mysh interpets contents as a sequence of commands, thus an executable program cannot be passed 
        as an argument. Instead, a file path of myscript.sh is passed as an argument to test prove mysh will open the 
        specified file and interpet its contents as a sequence of commands.
    2.  If the path passed as an argument is a directory and not a file, a stderr message will be outputted.
    3.  If the path passed as an argument is a file or directory that does not exist, a stderr message will be outputted.

Interactive Mode:
    1.  In interactive mode, if the first token contains a slash (/), mysh will interpret the token as a path to an 
        executable program.
    2.  As shown in mysh.c, mysh will use fork() to create a subprocess, execv() to execute the specified program, 
        and wait() to obtain the program's exit status.
    3.  If no file is found, mysh will print an error message ("execv: No such file or directory") and set the last exit
        status to 1.
    4.  If a file is found cannot be executed, mysh will print an error message ("execv: Permission denied") and set the
        last exit status to 1.

